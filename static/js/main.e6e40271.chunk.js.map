{"version":3,"sources":["api/users.ts","api/todos.ts","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","TodoInfo","todo","user","usersFromServer","find","userItem","className","classNames","href","TodoList","todos","map","App","useState","todosFromServer","initialTodos","setInitialTodos","hasTitleError","setHasTitleError","setTitle","setUserId","hasUserIdError","setHasUserIdError","reset","resetTitle","resetUser","handleSubmit","event","preventDefault","isTitleValid","Boolean","trim","length","isUserIdValid","newTodo","Math","max","action","method","onSubmit","htmlFor","type","placeholder","value","onChange","target","disabled","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6e40271.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport classNames from 'classnames';\nimport usersFromServer from '../../api/users';\n\nexport type User = {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n};\n\nexport type TodoItemType = {\n  id: number;\n  title: string;\n  userId: number;\n  completed: boolean;\n};\n\ntype TodoInfoProps = {\n  todo: TodoItemType;\n};\n\nexport const TodoInfo: React.FC<TodoInfoProps> = ({ todo }) => {\n  const user = usersFromServer.find((userItem) => userItem.id === todo.userId);\n\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n      {user && (\n        <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n          {user.name}\n        </a>\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo, TodoItemType } from '../TodoInfo';\n\ntype TodoListProps = {\n  todos: TodoItemType[];\n};\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nexport const App = () => {\n  const [initialTodos, setInitialTodos] = useState(todosFromServer);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [title, setTitle] = useState('');\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const reset = (resetTitle = true, resetUser = true) => {\n    if (resetTitle) {\n      setTitle('');\n    }\n\n    if (resetUser) {\n      setUserId(0);\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const isTitleValid = Boolean(title.trim().length > 0);\n    const isUserIdValid = Boolean(userId);\n\n    setHasTitleError(!isTitleValid);\n    setHasUserIdError(!isUserIdValid);\n\n    if (isTitleValid && isUserIdValid) {\n      const maxId = Math.max(...initialTodos.map(todo => todo.id), 0);\n\n      const newTodo = {\n        id: maxId + 1,\n        title,\n        userId,\n        completed: false,\n      };\n\n      setInitialTodos([...initialTodos, newTodo]);\n      reset();\n    } else {\n      reset(isTitleValid, isUserIdValid);\n    }\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"title\">\n            Title:\n          </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"title\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n          {hasTitleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"user\">\n            User:\n          </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"user\"\n            placeholder=\"Choose a user\"\n            value={userId}\n            onChange={handleUserIdChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {hasUserIdError\n          && <span className=\"error\">Please choose a user</span> }\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\" onClick={handleSubmit}>\n          Add\n        </button>\n      </form>\n      <TodoList todos={initialTodos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}